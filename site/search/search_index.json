{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my Minecraft Coding page where I try to teach you Minecraft Coding","title":"Info"},{"location":"getting-started/","text":"I'm glad you're here... I would recommend you to have a look at the basics and if you don't understand it, let it go again and come to my Discord .","title":"Getting started"},{"location":"advanced/something/","text":"something","title":"something"},{"location":"basic/001%20-%20Eclipse%20Setup/","text":"Download the latest IDE at Eclipse.org Install \"Eclipse IDE for Java Developers\". Select any workspace. Done!","title":"Eclipse Setup"},{"location":"basic/002%20-%20Build%20your%20own%20.jar/","text":"Download the latest BuildTools.jar at spigotmc.org/wiki/buildtools/ Open a Command prompt. Navigate to where you downloaded BuildTools.jar Run BuildTools.jar from the terminal (Do not double-click BuildTools.jar) by doing: java -jar BuildTools.jar --rev latest | for the latest version java -jar BuildTools.jar --rev 1.8.8 | for the 1.8.8 Wait util its done. Done!","title":"Own Spigot.jar"},{"location":"basic/003%20-%20Create%20your%20first%20Project/","text":"Create \u00b6 Open Eclipse Click on \"File\" -> \"New\" -> \"Java Project\" Pick a Random Project name (\"tutorial\") Click on Finish Click on \"Don\u00b4t Create\" bc. we dont need a \"module-info.java\" Setup \u00b6 Right Click your Project and open the \"Properties\" Navigate to \"Java Build Path\" -> \"Libraries\" -> \"Modulepath\" and Click on \"Add External JARs...\" Select your spigot.jar Click on \"Apply and Close\" Right Click the \"src\" Package and go on \"New\" -> \"Package\" The name is made up of your domain and your project name. (Freddi.xyz -> \"xyz.freddi.tutorial\") And Click on Finish Right Click your created Package and create an new Class. (\"New\" -> \"Class\") The name is your Project name. (\"Tutorial\") Start Coding \u00b6 Now add \"extends JavaPlugin\" to your Main Class. package xyz.freddi.tutorial ; public class Tutorial extends JavaPlugin { } Import import org.bukkit.plugin.java.JavaPlugin; Tip Press Ctrl + Shift + O to manage your Imports package xyz.freddi.tutorial ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { } We start then easily and make a Hello World out put at the start. package xyz.freddi.tutorial ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { System . out . println ( \"Hello World\" ); } } Now you have to create the \"plugin.yml\" in the \"src\" Package. (Right click on \"src\" -> \"New\" -> \"File\" -> \"plugin.yml\") Open it in the \"Text-Editor\" inside of Eclipse. name: Tutorial author: Freddi version: 1.0.0 main: xyz.freddi.tutorial.Tutorial Build \u00b6 To Build just Right Click on your Project Click on \"Export...\".-> \"Java\" -> \"JAR file\" -> \"Next >\" -> all check boxes on the right Chose a export path Click on \"Finish\"","title":"Create your first Project"},{"location":"basic/003%20-%20Create%20your%20first%20Project/#create","text":"Open Eclipse Click on \"File\" -> \"New\" -> \"Java Project\" Pick a Random Project name (\"tutorial\") Click on Finish Click on \"Don\u00b4t Create\" bc. we dont need a \"module-info.java\"","title":"Create"},{"location":"basic/003%20-%20Create%20your%20first%20Project/#setup","text":"Right Click your Project and open the \"Properties\" Navigate to \"Java Build Path\" -> \"Libraries\" -> \"Modulepath\" and Click on \"Add External JARs...\" Select your spigot.jar Click on \"Apply and Close\" Right Click the \"src\" Package and go on \"New\" -> \"Package\" The name is made up of your domain and your project name. (Freddi.xyz -> \"xyz.freddi.tutorial\") And Click on Finish Right Click your created Package and create an new Class. (\"New\" -> \"Class\") The name is your Project name. (\"Tutorial\")","title":"Setup"},{"location":"basic/003%20-%20Create%20your%20first%20Project/#start-coding","text":"Now add \"extends JavaPlugin\" to your Main Class. package xyz.freddi.tutorial ; public class Tutorial extends JavaPlugin { } Import import org.bukkit.plugin.java.JavaPlugin; Tip Press Ctrl + Shift + O to manage your Imports package xyz.freddi.tutorial ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { } We start then easily and make a Hello World out put at the start. package xyz.freddi.tutorial ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { System . out . println ( \"Hello World\" ); } } Now you have to create the \"plugin.yml\" in the \"src\" Package. (Right click on \"src\" -> \"New\" -> \"File\" -> \"plugin.yml\") Open it in the \"Text-Editor\" inside of Eclipse. name: Tutorial author: Freddi version: 1.0.0 main: xyz.freddi.tutorial.Tutorial","title":"Start Coding"},{"location":"basic/003%20-%20Create%20your%20first%20Project/#build","text":"To Build just Right Click on your Project Click on \"Export...\".-> \"Java\" -> \"JAR file\" -> \"Next >\" -> all check boxes on the right Chose a export path Click on \"Finish\"","title":"Build"},{"location":"basic/hotkeys/","text":"Eclipse \u00b6 Ctrl + Shift + O -> manage Imports. Ctrl + Shift + F -> auto Formate. Ctrl + S -> save current class. Ctrl + Shift + S -> save all classes.","title":"Hotkeys"},{"location":"basic/hotkeys/#eclipse","text":"Ctrl + Shift + O -> manage Imports. Ctrl + Shift + F -> auto Formate. Ctrl + S -> save current class. Ctrl + Shift + S -> save all classes.","title":"Eclipse"},{"location":"basic/command/004%20-%20CommandExecutor/","text":"Create Command \u00b6 package xyz.freddi.tutorial ; import org.bukkit.command.Command ; import org.bukkit.command.CommandExecutor ; import org.bukkit.command.CommandSender ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setExecutor ( new CommandExecutor () { @Override public boolean onCommand ( CommandSender sender , Command cmd , String label , String [] args ) { return false ; } }); } } Check if sender is a Player \u00b6 package xyz.freddi.tutorial ; import org.bukkit.command.Command ; import org.bukkit.command.CommandExecutor ; import org.bukkit.command.CommandSender ; import org.bukkit.entity.Player ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setExecutor ( new CommandExecutor () { @Override public boolean onCommand ( CommandSender sender , Command cmd , String label , String [] args ) { if ( ! ( sender instanceof Player )) { sender . sendMessage ( \"You are not a Player!\" ); return true ; } Player player = ( Player ) sender ; player . sendMessage ( \"Heyyy\" ); return true ; } }); } } Register Command in Plugin.yml \u00b6 name: Tutorial author: Freddi version: 1.0.0 main: xyz.freddi.tutorial.Tutorial commands: tutorial:","title":"CommandExecutor"},{"location":"basic/command/004%20-%20CommandExecutor/#create-command","text":"package xyz.freddi.tutorial ; import org.bukkit.command.Command ; import org.bukkit.command.CommandExecutor ; import org.bukkit.command.CommandSender ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setExecutor ( new CommandExecutor () { @Override public boolean onCommand ( CommandSender sender , Command cmd , String label , String [] args ) { return false ; } }); } }","title":"Create Command"},{"location":"basic/command/004%20-%20CommandExecutor/#check-if-sender-is-a-player","text":"package xyz.freddi.tutorial ; import org.bukkit.command.Command ; import org.bukkit.command.CommandExecutor ; import org.bukkit.command.CommandSender ; import org.bukkit.entity.Player ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setExecutor ( new CommandExecutor () { @Override public boolean onCommand ( CommandSender sender , Command cmd , String label , String [] args ) { if ( ! ( sender instanceof Player )) { sender . sendMessage ( \"You are not a Player!\" ); return true ; } Player player = ( Player ) sender ; player . sendMessage ( \"Heyyy\" ); return true ; } }); } }","title":"Check if sender is a Player"},{"location":"basic/command/004%20-%20CommandExecutor/#register-command-in-pluginyml","text":"name: Tutorial author: Freddi version: 1.0.0 main: xyz.freddi.tutorial.Tutorial commands: tutorial:","title":"Register Command in Plugin.yml"},{"location":"basic/command/005%20-%20TabCompleter/","text":"Create Command \u00b6 package xyz.freddi.tutorial ; import java.util.List ; import org.bukkit.command.Command ; import org.bukkit.command.CommandSender ; import org.bukkit.command.TabCompleter ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setTabCompleter ( new TabCompleter () { @Override public List < String > onTabComplete ( CommandSender sender , Command cmd , String label , String [] args ) { return null ; } }); } } with feedback \u00b6 package xyz.freddi.tutorial ; import java.util.Arrays ; import java.util.List ; import org.bukkit.command.Command ; import org.bukkit.command.CommandSender ; import org.bukkit.command.TabCompleter ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setTabCompleter ( new TabCompleter () { @Override public List < String > onTabComplete ( CommandSender sender , Command cmd , String label , String [] args ) { return Arrays . asList ( \"foo\" , \"bar\" ); } }); } }","title":"TabCompleter"},{"location":"basic/command/005%20-%20TabCompleter/#create-command","text":"package xyz.freddi.tutorial ; import java.util.List ; import org.bukkit.command.Command ; import org.bukkit.command.CommandSender ; import org.bukkit.command.TabCompleter ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setTabCompleter ( new TabCompleter () { @Override public List < String > onTabComplete ( CommandSender sender , Command cmd , String label , String [] args ) { return null ; } }); } }","title":"Create Command"},{"location":"basic/command/005%20-%20TabCompleter/#with-feedback","text":"package xyz.freddi.tutorial ; import java.util.Arrays ; import java.util.List ; import org.bukkit.command.Command ; import org.bukkit.command.CommandSender ; import org.bukkit.command.TabCompleter ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { ... getCommand ( \"tutorial\" ). setTabCompleter ( new TabCompleter () { @Override public List < String > onTabComplete ( CommandSender sender , Command cmd , String label , String [] args ) { return Arrays . asList ( \"foo\" , \"bar\" ); } }); } }","title":"with feedback"},{"location":"basic/events/006%20-%20JoinEvent/","text":"Register Listener \u00b6 package xyz.freddi.tutorial ; import org.bukkit.Bukkit ; import org.bukkit.event.Listener ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { Bukkit . getPluginManager (). registerEvents ( new Listener () { }, this ); } } add EventHendler \u00b6 package xyz.freddi.tutorial ; import org.bukkit.Bukkit ; import org.bukkit.ChatColor ; import org.bukkit.entity.Player ; import org.bukkit.event.EventHandler ; import org.bukkit.event.Listener ; import org.bukkit.event.player.PlayerJoinEvent ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { Bukkit . getPluginManager (). registerEvents ( new Listener () { @EventHandler public void onJoin ( PlayerJoinEvent event ) { Player player = event . getPlayer (); event . setJoinMessage ( ChatColor . translateAlternateColorCodes ( '&' , \"&7[&2+&7] &7\" + player . getName ())); if ( ! player . hasPlayedBefore ()) { Bukkit . getOnlinePlayers (). forEach ( all -> { all . sendMessage ( player . getCustomName () + \" is new...\" ); }); } } }, this ); } }","title":"JoinEvent"},{"location":"basic/events/006%20-%20JoinEvent/#register-listener","text":"package xyz.freddi.tutorial ; import org.bukkit.Bukkit ; import org.bukkit.event.Listener ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { Bukkit . getPluginManager (). registerEvents ( new Listener () { }, this ); } }","title":"Register Listener"},{"location":"basic/events/006%20-%20JoinEvent/#add-eventhendler","text":"package xyz.freddi.tutorial ; import org.bukkit.Bukkit ; import org.bukkit.ChatColor ; import org.bukkit.entity.Player ; import org.bukkit.event.EventHandler ; import org.bukkit.event.Listener ; import org.bukkit.event.player.PlayerJoinEvent ; import org.bukkit.plugin.java.JavaPlugin ; public class Tutorial extends JavaPlugin { @Override public void onEnable () { Bukkit . getPluginManager (). registerEvents ( new Listener () { @EventHandler public void onJoin ( PlayerJoinEvent event ) { Player player = event . getPlayer (); event . setJoinMessage ( ChatColor . translateAlternateColorCodes ( '&' , \"&7[&2+&7] &7\" + player . getName ())); if ( ! player . hasPlayedBefore ()) { Bukkit . getOnlinePlayers (). forEach ( all -> { all . sendMessage ( player . getCustomName () + \" is new...\" ); }); } } }, this ); } }","title":"add EventHendler"}]}